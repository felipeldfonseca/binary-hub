rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the file
    function isOwner(uid) {
      return request.auth != null && request.auth.uid == uid;
    }
    
    // Helper function to validate file size (25MB max for Pro, 5MB for Free)
    function isValidSize() {
      return resource.size <= 26214400; // 25 MB
    }
    
    // Helper function to validate file type for CSV uploads
    function isValidCSVType() {
      return resource.contentType == 'text/csv' || 
             resource.contentType == 'application/csv' ||
             resource.contentType == 'text/plain';
    }
    
    // Helper function to validate file type for images
    function isValidImageType() {
      return resource.contentType.matches('image/.*');
    }
    
    // CSV uploads - user-specific directory
    match /csv-uploads/{uid}/{fileName} {
      allow read, write: if isOwner(uid) && isValidCSVType() && isValidSize();
      allow delete: if isOwner(uid);
    }
    
    // User uploaded images (Pro plan feature)
    match /user-uploads/{uid}/{fileName} {
      allow read, write: if isOwner(uid) && isValidImageType() && isValidSize();
      allow delete: if isOwner(uid);
    }
    
    // Public assets (logos, marketing images)
    match /public-assets/{allPaths=**} {
      allow read: if true;
      allow write: if false; // Only admin can write
    }
    
    // Export files (PDF reports)
    match /exports/{uid}/{fileName} {
      allow read: if isOwner(uid);
      allow write: if false; // Only backend can write
      allow delete: if isOwner(uid);
    }
    
    // Temporary files (processing, etc.)
    match /temp/{uid}/{fileName} {
      allow read, write, delete: if isOwner(uid);
    }
    
    // Deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 